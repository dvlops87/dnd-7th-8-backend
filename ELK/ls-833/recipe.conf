#recipe.conf
input {
    jdbc {
      jdbc_driver_library => "/usr/share/java/mysql-connector-java-8.0.30.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_connection_string => "jdbc:mysql://rds_dns:3306/mazle?useSSL=false"
      jdbc_user => "id"
      jdbc_password => "pw"
      statement => "SELECT R.`recipe_id`
                         , R.`customer_uuid`
                         , U.`nickname`
                         , R.`recipe_name`
                         , R.`img`
                         , R.`price`
                         , (SELECT COUNT(*) FROM recipe_like WHERE recipe_id = recipe_id) as `like_cnt`
                    FROM recipe AS R
                    LEFT JOIN mazle_user U ON U.customer_uuid=R.customer_uuid"
      schedule => "* * * * *" # Query주기 설정
    }
}

filter {
    jdbc_streaming  {
      jdbc_driver_library => "/usr/share/java/mysql-connector-java-8.0.30.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_connection_string => "jdbc:mysql://rds_dns:3306/mazle?useSSL=false"
      jdbc_user => "id"
      jdbc_password => "pw"
      statement => "SELECT D.drink_id
                         , D.drink_name
                         , D.large_category
                         , D.medium_category
                         , D.small_category
                         , D.alcohol
                    FROM (
                        SELECT drink_id
                        FROM recipe_main_meterial
                        WHERE recipe_id = :i_recipe_id
                    ) M
                    LEFT JOIN drink AS D ON D.drink_id=M.drink_id"
    parameters => { "i_recipe_id" => "recipe_id"}
    target => "main_meterial"
    }
    jdbc_streaming  {
      jdbc_driver_library => "/usr/share/java/mysql-connector-java-8.0.30.jar"
      jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
      jdbc_connection_string => "jdbc:mysql://rds_dns:3306/mazle?useSSL=false"
      jdbc_user => "id"
      jdbc_password => "pw"
      statement => "SELECT M.meterial_id
                         , M.meterial_name
                    FROM (
                        SELECT meterial_id
                        FROM recipe_sub_meterial
                        WHERE recipe_id = :i_recipe_id
                    ) S
                    LEFT JOIN recipe_meterial AS M ON M.meterial_id=S.meterial_id"
    parameters => { "i_recipe_id" => "recipe_id"}
    target => "sub_meterial"
    }
    date {
        match => ["reg_date", "yyyy-MM-dd HH:mm:ss"]
    }

}

# 테스트를 위해 터미널에 output 설정
output {
    elasticsearch { 
        hosts=>["https://localhost:9200"]
        ssl => true
        ssl_certificate_verification => false
        document_id=>"%{recipe_id}"
        index => "recipe"
        user => "id" 
        password => "pw" 
    } 
    stdout {} 
}